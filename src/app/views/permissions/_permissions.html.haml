- has_admin_perms = check_privilege(Privilege::PERM_SET)
- prevent_admin_deletion = has_admin_perms && !(@show_inherited || @show_global) && (@permission_object == BasePermissionObject.general_permission_scope) && (BasePermissionObject.global_admin_permission_count == 1)
- content_for :permissions_form_header do
  - if not(@show_inherited or @show_global) && check_privilege(Privilege::PERM_SET)
    %li= link_to _("Grant Access"), new_permission_path(:permission_object_type => @permission_object.class.name, :permission_object_id => @permission_object.id, :path_prefix => @path_prefix, :use_tabs => @use_tabs ? @use_tabs : (@tabs ? 'yes' : 'no')), { :class => 'button primary', :id => 'new_permission_button'}
    %li= restful_submit_tag _("Revoke Access"), "destroy", multi_destroy_permissions_path, 'DELETE', :id => 'revoke_button', :class => 'button danger'
    %li= restful_submit_tag _("Edit"), "multi_update", multi_update_permissions_path, 'POST', :id => 'perm_edit_button', :class => 'hidden'
    = hidden_field_tag :permission_object_type, @permission_object.class.name
    = hidden_field_tag :permission_object_id, @permission_object.id

    - if @polymorphic_path_extras.present?
      - @polymorphic_path_extras.each do |key, value|
        = hidden_field_tag("polymorphic_path_extras[#{key}]", value)

    = hidden_field_tag :path_prefix, @path_prefix
    = hidden_field_tag :use_tabs, @use_tabs ? @use_tabs : (@tabs ? 'yes' : 'no')
  %span{:id => ("tab-container-1-nav" unless @inline)}
    - unless @permission_object == BasePermissionObject.general_permission_scope
      - if @show_inherited
        %li= link_to _("Direct Access"), params.merge(:show_inherited => false, :show_global => false, :page => 1), { :class => 'button', :id => 'direct_permission_button'}
        %li= link_to _("Global Access"), params.merge(:show_inherited => false, :show_global => true, :page => 1), { :class => 'button', :id => 'global_permission_button'}
      - elsif @show_global
        %li= link_to _("Direct Access"), params.merge(:show_inherited => false, :show_global => false, :page => 1), { :class => 'button', :id => 'direct_permission_button'}
        %li= link_to _("Inherited Access"), params.merge(:show_inherited => true, :show_global => false, :page => 1), { :class => 'button', :id => 'inherited_permission_button'}
      - else
        %li= link_to _("Inherited Access"), params.merge(:show_inherited => true, :show_global => false, :page => 1), { :class => 'button', :id => 'inherited_permission_button'}
        %li= link_to _("Global Access"), params.merge(:show_inherited => false, :show_global => true, :page => 1), { :class => 'button', :id => 'global_permission_button'}

- content_for :permissions_filter_controls do
  %li
    = label_tag :permissions_preset_filter, _("Viewing")
    = select_tag(:permissions_preset_filter, preset_filters_options_for_select(Permission::PRESET_FILTERS_OPTIONS, params[:permissions_preset_filter]), :include_blank => _("All Permissions"), :disabled => false)
    = hidden_field_tag :current_path, request.fullpath
    = restful_submit_tag _("Apply filters"), "filter", filter_permissions_path, 'POST', :class => 'button', :id => 'apply_permissions_preset_filter'
    %span.label.badge.dark= @permissions.count
  %li.table-search-filter
    = text_field_tag :permissions_search, params[:permissions_search], :placeholder => _("Search")
    = restful_submit_tag "", "search", filter_permissions_path, 'POST', :class => 'button', :id => 'apply_permissions_search'

  :javascript
    $(document).ready(function(){
      $("#apply_permissions_preset_filter").hide();
      $("#permissions_preset_filter").change(function() {
        $("#apply_permissions_preset_filter").click();
      });
      Conductor.clickOnEnterKeypress($('#permissions_search'), $('#apply_permissions_search'));
    });

= filter_table(@permission_list_header,
               @permissions,
               :form_header => :permissions_form_header,
               :filter_controls => :permissions_filter_controls) do |permission|
  %tr{:class => cycle('nostripe','stripe')}
    - if not(@show_inherited or @show_global)
      %td{:class => 'checkbox'}
        - if has_admin_perms && !(prevent_admin_deletion && BasePermissionObject.is_global_admin_perm(permission))
          - selected = params[:select] == 'all'
          = check_box_tag "permission_selected[]", permission.id, selected, :id => "permission_checkbox_#{permission.id}"
    %td= link_to permission.entity.name, ((permission.entity.entity_target_type == "User") ? user_path(permission.entity.user) : user_group_path(permission.entity.user_group))
    - if !(@show_inherited || @show_global) && has_admin_perms && !(prevent_admin_deletion && BasePermissionObject.is_global_admin_perm(permission))
      %td= select_tag "permission_role_selected[]", options_for_select(@roles.map {|r| [ t(r.name, :scope=> :role_defs, :default => r.name), "#{permission.id},#{r.id}" ] }, :selected => "#{permission.id},#{permission.role.id}", :disabled => @permission_object.permissions.where(["entity_id = ? and role_id != ?", permission.entity_id, permission.role_id]).collect {|p| "#{permission.id},#{p.role.id}"}), :id => "permission_role_selected_#{permission.id}"
      :javascript
        $("#permission_role_selected_#{permission.id}").change(function () { $("#perm_edit_button").click(); } );

    -else
      %td= t(permission.role.name, :scope=> :role_defs, :default => permission.role.name)
    - if @show_inherited
      %td= permission.permission.permission_object.name
