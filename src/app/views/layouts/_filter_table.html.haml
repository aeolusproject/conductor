= form_tag({}, :class => 'filterable-data') do

  - if content_for? filter_controls or content_for? form_header
    %div.controls
      %ul.filter-controls
        = yield filter_controls if content_for? filter_controls

      - if content_for? form_header
        %ul.actions
          = yield form_header

  %table.flat.checkbox_table{ 'data-none_selected' => _("Please make a selection first."), 'data-confirm' => _("Are you sure you want to proceed?") }
    %thead
      %tr
        - columns.each do |column|
          - if column[:name] == 'checkbox'
            %th{:class => column[:class]}= check_box_tag :select_all, true, false, :class => 'select_all'
          -else
            %th{:class => column[:class]}= column[:name]
      - if !rows.any?
        %tr
          %td{:colspan => columns.size}= _("No matching results.")
    = rows.collect {|row| capture_haml(row, &block)}.join.html_safe

  - if content_for? form_footer
    %fieldset.options
      = yield form_footer

-# With the latest ActiveRecord + will_paginate versions, we
-#  sometimes get back an ActiveRecord::Relation after pagination,
-#  so we can't just check if it's a WillPaginate::Collection.
-#  http://rubydoc.info/gems/will_paginate/3.0.2/file/README.md
-# Checking for the methods will_paginate adds is the best way
-#  we have been able to find to check if we're viewing a paginated
-#  collection or not.
- if rows.respond_to?(:total_pages)
  = render_pagination(rows)
