= render :partial => 'layouts/admin_nav'
%header.page-header
  .obj_actions
    - if check_privilege(Privilege::VIEW, User)
      .return_to
        =_("Return to:")
        = link_to _("Users"), users_path

%section.content-section.user
  .content
    #user_card.user_stats_card
      %header.user-card-header
        %h2= format_user_name(@user)
      .user-card-content
        %dl
          %dt=_("E-mail Address")
          %dd= @user.email
          %dt=_("Username")
          %dd= @user.username
        .button-group
          = link_to "#{_("Edit")}", edit_user_path(@user), :class => 'button'
          - unless @user.id == current_user.id
            = button_to "#{_("Delete")}", user_path(@user), :method => :delete, :confirm => _("Are you sure you want to delete this user?"), :class => "button danger"
    %dl.user_stats
      %ul
        %div
          %li
            %dt=_("Created")
            %dd= l(@user.created_at.to_date, :format => :long) if @user.created_at
          %li
            %dt=_("Number of Logins")
            %dd= @user.login_count
          %li
            %dt=_("Last Login")
            %dd= l(@user.last_login_at, :format => :long) if @user.last_login_at
        %div
          %li
            %dt=_("Last Updated")
            %dd= l(@user.updated_at, :format => :long) if @user.updated_at
          %li
            %dt=_("Failed Logins")
            %dd= @user.failed_login_count
          %li
            %dt=_("Last Login IP")
            %dd= @user.last_login_ip

%section.content-section.groups
  %header
    %h2.groups=_("Groups")
  .content
    = filter_table(@groups_header, @user_groups) do |user_group|
      %tr{:class => cycle('nostripe','stripe')}
        %td= link_to user_group.name, user_group_path(user_group)
        %td= _(user_group.membership_source)
%section.content-section.permissions
  %header
    %h2.permissions=_("Permissions")
  .content
    = render :partial => 'permissions/objects'
/%section.content-section.user
/  %header
/    %h2.activity Activity
/
/  .content
/    Unimplemented.
