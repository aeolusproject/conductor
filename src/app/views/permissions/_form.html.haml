- content_for :entities_filter_controls do
  %li
    = label_tag :entities_preset_filter, _("Viewing")
    = select_tag(:entities_preset_filter, preset_filters_options_for_select(Entity::PRESET_FILTERS_OPTIONS, params[:entities_preset_filter]), :include_blank => _("All Entities"), :disabled => false)
    = hidden_field_tag :current_path, request.fullpath
    = restful_submit_tag _("Apply filters"), "filter", filter_entities_permissions_path, 'POST', :class => 'button', :id => 'apply_entities_preset_filter'
    %span.label.badge.dark= @entities.count
  %li.table-search-filter
    = text_field_tag :entities_search, params[:entities_search], :placeholder => _("Search")
    = restful_submit_tag "", "search", filter_entities_permissions_path, 'POST', :class => 'button', :id => 'apply_entities_search'

  :javascript
    $(document).ready(function(){
      $("#apply_entities_preset_filter").hide();
      $("#entities_preset_filter").change(function() {
        $("#apply_entities_preset_filter").click();
      });
      Conductor.clickOnEnterKeypress($('#entities_search'), $('#apply_entities_search'));
    });

- content_for :form_footer do
  = hidden_field_tag :permission_object_type, @permission_object.class.name
  = hidden_field_tag :permission_object_id, @permission_object.id
  = hidden_field_tag :path_prefix, @path_prefix
  = hidden_field_tag :use_tabs, @use_tabs
  = restful_submit_tag _("Grant Access"), "create", permissions_path, 'POST', :id => 'save_button', :class => 'button primary'
  = link_to _("Cancel"), @return_path, :class => 'button danger'
= filter_table(@header, @entities,
               :filter_controls => :entities_filter_controls) do |entity|
  %tr{:class => cycle('nostripe','stripe')}
    %td
      -# - selected = params[:select] == 'all'
      -#  = check_box_tag "entity_selected[]", entity.id, selected, :id => "entity_checkbox_#{entity.id}"
    %td= link_to entity.name, ((entity.entity_target_type == "User") ? user_path(entity.user) : user_group_path(entity.user_group))
    %td= select_tag "entity_role_selected[]", options_for_select([['', "#{entity.id},"]] + @roles.map {|r| [t(r.name, :scope=> :role_defs, :default => r.name), "#{entity.id},#{r.id}" ] }, :disabled => @permission_object.permissions.where(:entity_id=>entity.id).collect {|p| "#{entity.id},#{p.role.id}"}), :id => "entity_role_selected_#{entity.id}"
