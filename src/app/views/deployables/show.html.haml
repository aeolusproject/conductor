= render :partial => 'layouts/admin_nav'
- modify_perm = check_privilege(Privilege::MODIFY, @deployable)
%header.page-header
  .obj_actions
    .button-group
      - if modify_perm
        = link_to _("Edit"), edit_polymorphic_path([@catalog, @deployable]), :class => 'button', :id => 'edit_button'
        = link_to _("Edit XML"), edit_polymorphic_path([@catalog, @deployable], :edit_xml => true), :class => 'button', :id => 'edit_xml_button'
        = button_to _("Delete"), polymorphic_path([@catalog, @deployable]), :method => 'delete', :confirm => "#{_("Are you sure you want to delete?")}", :class => 'button danger', :id => 'delete'

    - launch_deployment_button_path = launch_new_deployments_path(:deployable_id => @deployable.id, :deployment => { :name => @deployable.name, :pool_id => @catalog.pool }, :backlink => request.fullpath)
    - if @catalog.present? && @deployable_errors.empty? && @pushed_count > 0
      = link_to _("Launch"), launch_deployment_button_path, :id => :launch_deployment_button, :'data-path' => launch_deployment_button_path
    -else
      %a{:id => :launch_deployment_button, :class => 'disabled', :'data-path' => launch_deployment_button_path}= _("Launch")
  %h1.catalog_entries= @deployable.name

%section.content-section
  %header
    %h2.images= _("Images")
  .content
    %table.light_table
      %thead
        %tr
          %th.status
          %th
            %strong=_("Name")
          %th.align-center=_("Images")
          %th=_("Default Hardware Profile")
          %th.align-center=_("HDD")
          %th.align-center=_("RAM")
          %th.align-center=_("ARCH")
          %th=_("UUIDs")
      %tbody
        - @images_details.each do |assembly|
          %tr
            %td.status= image_valid?(assembly, modify_perm)
            %td
              %strong=assembly[:name]
            %td.align-center=assembly[:images_count]
            %td=assembly[:hwp_name]
            %td.align-center=assembly[:hwp_hdd]
            %td.align-center=assembly[:hwp_ram]
            %td.align-center=assembly[:hwp_arch]
            %td.align-center
              - if assembly[:build_and_target_uuids].nil?
                = _("N/A")
              - else
                %a.control{:href => '#'}=_("Show/Hide")
          - unless assembly[:build_and_target_uuids].nil?
            %tr.collapsed
              %td
              %td{:colspan => 7}
                %ul
                  = render :partial => "image_uuids", :locals => {:uuid_arr => assembly[:build_and_target_uuids]}

%section.content-section
  - if @missing_images.empty?
    %header
      %h2.build= _("Build Status")

    .content
      %ul#providers-list.catalog_pretty
        - @image_status.each do |image_status_for_account|
          = render :partial => 'image_status',
                   :mustache => image_status_for_account
  - else
    %header
      %h2.build= _("Build Status")
    .content
      .centered.align-center
        %strong Assemblies in Deployable XML arent properly configured.
      %strong= _("Images missing from the Image Warehouse")
      %ul#missing-images-list
        - @missing_images.each do |uuid|
          %li= uuid

%section.content-section
  %header
    .section-controls
      -if modify_perm
        = form_for(:catalog_entry, :url => catalog_entries_path) do |f|
          = f.label :catalog_id, _("Choose a Catalog to enable access:")
          = f.select :catalog_id, options_for_select(@catalogs_options.map {|c| [c.name, c.id]})
          = f.hidden_field(:deployable_id, :value => @deployable.id)
          = f.submit _("Add New Catalog"), :id => :add_catalog, :class => 'button primary', :disabled => @catalogs_options.empty?
    %h2.catalogs= _("Catalogs")
  .content
    .centered
      %table.light_table
        %tr
          %th.remove_catalog
          %th
            %label
              %strong= _("Catalog Name")
          %th
            %label
              %strong= _("Environment: %{environment}")
        - @deployable.catalog_entries.each do |catalog_entry|
          %tr
            %td.remove_catalog= button_to "", catalog_entry_path(catalog_entry), :method => 'delete', :confirm => "#{_("Are you sure you want to delete?")}", :id => 'delete', :class => 'remove_catalog'
            %td= catalog_entry.catalog.name
            %td= catalog_entry.catalog.pool.pool_family.name

- if check_privilege(Privilege::PERM_VIEW,@permission_object)
  %section.content-section
    %header
      %h2.roles= _("Role Assignments")
    .content
      = render :partial => 'permissions/permissions'

:javascript
  $(document).ready(function() {
    $('table.light_table tbody tr').map(function(){
      var this_row = this;
      $(this).find('a.control').click(function(){
        $(this_row).next().toggleClass('collapsed');
        return false;
      });
    });
  });

%script#imageStatusTemplate{ :type => 'text/html' }
  = render :partial => 'image_status'
