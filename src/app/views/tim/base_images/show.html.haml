= render :partial => 'layouts/admin_nav'

%header.page-header
  .obj_actions
    .return_to
      =_('Return to:')
      = link_to _('Images'), base_images_path
    - if check_privilege(Alberich::Privilege::MODIFY, @base_image)
      .button-group
        = link_to _('New Deployable from Image'), main_app.new_deployable_path(:create_from_image => @base_image.id), :class => 'button'
        - unless @base_image.imported?
          = link_to _('View Image Template XML'), tim.template_path(@base_image.template, :format => :xml), :class => 'button'
        = button_to _('Delete'), base_image_path(@base_image.id), :method => 'delete', :confirm => _('Are you sure you want to delete?'), :class => 'button danger', :id => 'delete'
  %h1.no-icon= image_name(@base_image)

- user_can_build = (check_privilege(Alberich::Privilege::MODIFY, @base_image))
%section.content-section
  %header
    %h2=_('Properties')
  .content
    %table.properties_table
      %tbody
        %tr
          %td= _('Environment')
          %td= @base_image.pool_family.name
        %tr
          %td= _('Image ID')
          %td= @base_image.uuid

%section.content-section
  %header
    .section-controls
      - if @versions.any?
        %span= _('View build')
        - if user_can_build
          = form_tag base_image_path(@base_image.id), :method => :get do
            = select_tag :build, options_for_build_select(@versions, @version, @latest_image_version)
            = submit_tag _('Select'), :id => 'select_build_button'
      - if user_can_build && !@base_image.imported?
        |
        = form_tag build_all_base_image_path(@base_image.id), :method => :post do
          = submit_tag _('Build All'), :id => 'build_all_button'
    %h2= _('Provider Images')

  .content
    %ul.image_builds
      = render :partial => 'status', :mustache => {:targets => @targets}

:javascript
  $(document).ready(function(){
    $("#select_build_button").hide();
    $("#build").change(function() {
      $("#select_build_button").click();
    });
  });

%script#imageStatusTemplate{ :type => 'text/html' }
  = render :partial => 'status'
